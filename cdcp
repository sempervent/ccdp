#!/usr/bin/env bash
# ex: set fdm=marker
# usage {{{1 
#/ Usage: 
#/    ./cdcp
#/
#/    -n|--name)
#/       specify the name of the project
#/
#/    -P|--project)
#/       specify the text for project
#/
#/    -c|--container)
#/       specify additional docker images to be spun up
#/   
#/    -N|--network)
#/       specify a network for all images to share
#/
#/    -v|--volume)
#/       specify a volume for all images to share
#/
#/    --no-override)
#/       do not automatically create the override file
#/
#/    --no-base-image)
#/       do not create a base image
#/
#/    -D|--docker-compose-version)
#/       specify the docker-compose file version
#/
#/    -h|-?|--help)
#/       show this help and exit
#/
# 1}}} 
# environment {{{1 
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
PARENT="$(basename "$DIR")"
NAME="$PARENT"
DOCKER_COMPOSE_VERSION=${DOCKER_COMPOSE_VERSION:-'3.1'}
# 1}}} 
# functions {{{1 
banner() { # {{{2
  # make a static banner with embeded color codes
  # BANNER=$(cat <<EOF\n  EOF;
  # for a simple banner use
  # BANNER="The \n$PROJECT\n\t script"
  if [ "$PROJECT" == '' ]:
    PROJECT="$2"
  # or have a little funn
  if [ -x "figlet" ] & [ -x "cowsay"]; then
    BANNER=$(figlet "$PROJECT" | cowsay)
  else
    BANNER="\\e[32$PROJECT\\e[39m"
  fi
  # or do some coloring
  # BANNER="\\e[32$PROJECT\\e[39m"
  echo -e "$BANNER"
} # 2}}}
die() { # {{{2 
  echo -e "\\e[31mFAILURE:\\e[39m $1"
  exit 1
} # 2}}} 
warn() { # {{{2 
  echo -e "\\e[33mWARNING:\\e[39m $1"
} # 2}}} 
show_help() { # {{{2 
  grep '^#/' "${BASH_SOURCE[0]}" | cut -c4- || \
    die "Failed to display usage information"
} # 2}}} 
write_docker_compose_file() { # {{{2
  # usage is $1 = $DOCKER_COMPOSE_VERSION 
  #          $2 = container name
  #          $3 = output_file
  dc_yaml=$(cat <<EOF 
version: '$1'

services:

  $2:
    build: $2
EOF
)
  echo -e "$dc_yaml" >> "$3"
} # 2}}}
# 1}}} 
# arguments {{{1 
while :; do
  case $1 in # check arguments {{{2 
    -P|--project) # specify project
      PROJECT="A $2 \\e[34mdocker-compose\\e[39m Project"
      shift 2
      ;; 
    -h|-\?|--help) # help {{{3 
      banner
      show_help
      exit
      ;; # 3}}} 
    -?*) # unknown argument {{{3 
      warn "Unknown option (ignored): $1"
      shift
      ;; # 3}}} 
    *) # default {{{3 
      break # 3}}} 
  esac # 2}}} 
done
# 1}}} 
# logic {{{1 
banner
write_docker_compose "$DOCKER_COMPOSE_VERSION" "$PARENT" "docker-compose.yaml"
# for i in all the extra containers
write_docker_compose

# 1}}} 
